#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Author
Wil Langford
\end_layout

\begin_layout Title
MTH 457, Homework
\end_layout

\begin_layout Date
November 24, 2009
\end_layout

\begin_layout Section*
Homework 1, Problem 3
\end_layout

\begin_layout Description
Problem Draw out the game tree for tic-tac-toe.
 Hint: consider symmetry.
\end_layout

\begin_layout Description
Solution The attached PDF is a representation of the game tree for tic-tac-toe.
\end_layout

\begin_layout Description
Citations
\end_layout

\begin_deeper
\begin_layout Itemize
Conversations with Aaron Spindel that occured between writing the program
 and this writeup helped me organize my thoughts.
\end_layout

\begin_layout Itemize
A conversation with Prof.
 John Caughman helped me understand in more detail what was happening when
 I collapsed symmetrically equivalent game states.
\end_layout

\begin_layout Itemize
The wikipedia article on Game Trees was helpful.
\end_layout

\begin_layout Itemize
Many online references on Perl, dot and Graphviz were used.
\end_layout

\begin_layout Itemize
I tweaked the writeup a little after speaking to Prof.
 Bleiler.
\end_layout

\end_deeper
\begin_layout Subsection*
Explanation of PDF
\end_layout

\begin_layout Standard
The PDF accompanying this writeup is not the game tree for tic-tac-toe.
 The full game tree for tic-tac-toe is very large and would be difficult
 to represent as a whole in a meaningful way.
 Therefore, I've taken a cheap shortcut by creating a digraph that 
\emph on
represents
\emph default
 the game tree for tic-tac-toe.
\end_layout

\begin_layout Standard
In the digraph, each vertex represents a symmetrically distinct game state
 of tic-tac-toe.
 Game states to the left are parent states of their children on the right.
 Each edge in the graph represents a symmetrically distinct legal move.
 Red edges with triangular ends represent corner moves.
 Green edges with half-box ends represent edge moves.
 Blue edges with circular ends represent center moves.
\end_layout

\begin_layout Standard
A single play of tic-tac-toe can be traced from left to right on the digraph,
 beginning at the empty board on the far left and ending at a game state
 with no children (which corresponds to a 
\begin_inset Quotes eld
\end_inset

leaf
\begin_inset Quotes erd
\end_inset

 vertex in the full game tree.)
\end_layout

\begin_layout Standard
Each game state with more than one parent can be viewed as the root vertex
 of a symmetric equivalence class of subgames.
 Therefore, the full game tree could be generated by creating a separate
 copy of each vertex 
\begin_inset Formula $v$
\end_inset

 for each of 
\begin_inset Formula $v$
\end_inset

's parents.
\end_layout

\begin_layout Standard
There are 765 symmetrically distinct game states in tic-tac-toe.
 There are 138 
\begin_inset Quotes eld
\end_inset

leaves.
\begin_inset Quotes erd
\end_inset

 (That is, 138 distinct win, loss or draw states.)
\end_layout

\begin_layout Standard
Symmetric equivalence between two game states was decided based on applying
 all eight symmetries of a square (from group theory) to one of the game
 boards and comparing the results to the other board to see if they were
 equal.
\end_layout

\begin_layout Standard
In the primary data structure I used, I referred to each game state only
 according to a symmetrically equivalent 
\begin_inset Quotes eld
\end_inset

master state
\begin_inset Quotes erd
\end_inset

 for its class.
 Effectively, I chose one game state from each equivalence class as the
 
\begin_inset Quotes eld
\end_inset

name
\begin_inset Quotes erd
\end_inset

 of the entire class and used it throughout to refer to that class.
 This approach was a deliberate tradeoff: I wanted condensed enough output
 to be able to view as a whole, but the ability to trivially trace a single
 play of tic-tac-toe was lost (as discussed above.) It's still possible to
 trace a given play, but it's not trivially easy.
\end_layout

\end_body
\end_document
